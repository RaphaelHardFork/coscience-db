// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id          Int       @id @default(autoincrement())
  firstName   String    @db.VarChar(255)
  lastName    String    @db.VarChar(255)
  email       String    @unique @db.VarChar(255)
  createdAt   DateTime  @default(now())
  wallets     String[]  @db.VarChar(45)
  apiKey      ApiKey?
  articles    Articles[]
  comments    Comments[]
  reviews     Reviews[]

  @@map(name: "users")
}

model ApiKey {
  id          Int     @id @default(autoincrement())
  user        Users   @relation(fields: [userId], references:[id])
  userId      Int     
  key         String  @db.VarChar(100)
}

model Articles {
  id            Int         @id @default(autoincrement())
  blockchainId  Int         @unique
  author        Users       @relation(fields: [authorId], references:[id])
  authorId      Int
  title         String      @db.Text
  abstract      String      @db.Text
  contentCID    String      @db.VarChar(50)
  comments      Comments[]
  reviews       Reviews[]

  @@map(name: "articles")
}

model Comments {
  id            Int         @id @default(autoincrement())
  blockchainId  Int         @unique
  author        Users       @relation(fields: [authorId], references:[id])
  authorId      Int
  title         String      @db.Text
  contentCID    String      @db.VarChar(50)
  onArticle     Articles    @relation(fields: [articleId], references:[id])
  articleId     Int

  @@map(name: "comments")
}

model Reviews {
  id            Int         @id @default(autoincrement())
  blockchainId  Int         @unique
  author        Users       @relation(fields: [authorId], references:[id])
  authorId      Int
  title         String      @db.Text
  contentCID    String      @db.VarChar(50)
  onArticle     Articles    @relation(fields: [articleId], references:[id])
  articleId     Int

  @@map(name: "reviews")
}
